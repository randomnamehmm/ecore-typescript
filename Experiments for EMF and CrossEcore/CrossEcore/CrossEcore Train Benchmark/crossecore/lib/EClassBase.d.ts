import { OrderedSet } from "./OrderedSet";
import { EStructuralFeature } from "./EStructuralFeature";
import { EClass } from "./EClass";
import { EAttribute } from "./EAttribute";
import { NotificationChain } from "./NotificationChain";
import { EGenericType } from "./EGenericType";
import { EOperation } from "./EOperation";
import { EClassifierImpl } from "./EClassifierImpl";
import { InternalEObject } from "./InternalEObject";
import { EReference } from "./EReference";
export declare class EClassBase extends EClassifierImpl implements EClass {
    private _abstract;
    abstract: boolean;
    private _interface;
    interface: boolean;
    private _eSuperTypes;
    readonly eSuperTypes: OrderedSet<EClass>;
    private _eOperations;
    readonly eOperations: OrderedSet<EOperation>;
    readonly eAllAttributes: OrderedSet<EAttribute>;
    readonly eAllReferences: OrderedSet<EReference>;
    readonly eReferences: OrderedSet<EReference>;
    readonly eAttributes: OrderedSet<EAttribute>;
    readonly eAllContainments: OrderedSet<EReference>;
    readonly eAllOperations: OrderedSet<EOperation>;
    readonly eAllStructuralFeatures: OrderedSet<EStructuralFeature>;
    readonly eAllSuperTypes: OrderedSet<EClass>;
    readonly eIDAttribute: EAttribute;
    private _eStructuralFeatures;
    readonly eStructuralFeatures: OrderedSet<EStructuralFeature>;
    private _eGenericSuperTypes;
    readonly eGenericSuperTypes: OrderedSet<EGenericType>;
    readonly eAllGenericSuperTypes: OrderedSet<EGenericType>;
    isSuperTypeOf(someClass: EClass): boolean;
    getOverride(operation: EOperation): EOperation;
    getFeatureType(feature: EStructuralFeature): EGenericType;
    getFeatureID(feature: EStructuralFeature): number;
    getFeatureCount(): number;
    getOperationID(operation: EOperation): number;
    getOperationCount(): number;
    getEStructuralFeature(...args: Array<any>): any;
    getEStructuralFeature_number(featureID: number): EStructuralFeature;
    getEStructuralFeature_string(featureName: string): EStructuralFeature;
    getEOperation(operationID: number): EOperation;
    static eStaticClass: EClass;
    protected eStaticClass(): EClass;
    eInverseAdd(otherEnd: InternalEObject, featureID: number, msgs: NotificationChain): NotificationChain;
    eInverseRemove(otherEnd: InternalEObject, featureID: number, msgs: NotificationChain): NotificationChain;
    eGet_number_boolean_boolean(featureID: number, resolve: boolean, coreType: boolean): any;
    eSet_number_any(featureID: number, newValue: any): void;
}
