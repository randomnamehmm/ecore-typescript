import { OrderedSet } from "./OrderedSet";
import { EClassifier } from "./EClassifier";
import { EPackage } from "./EPackage";
import { EFactory } from "./EFactory";
import { EClass } from "./EClass";
import { NotificationChain } from "./NotificationChain";
import { ENamedElementImpl } from "./ENamedElementImpl";
import { InternalEObject } from "./InternalEObject";
export declare class EPackageBase extends ENamedElementImpl implements EPackage {
    private _nsURI;
    nsURI: string;
    private _nsPrefix;
    nsPrefix: string;
    private _eFactoryInstance;
    eFactoryInstance: EFactory;
    private _eClassifiers;
    readonly eClassifiers: OrderedSet<EClassifier>;
    private _eSubpackages;
    readonly eSubpackages: OrderedSet<EPackage>;
    readonly eSuperPackage: EPackage;
    getEClassifier(name: string): EClassifier;
    static eStaticClass: EClass;
    protected eStaticClass(): EClass;
    eInverseAdd(otherEnd: InternalEObject, featureID: number, msgs: NotificationChain): NotificationChain;
    eInverseRemove(otherEnd: InternalEObject, featureID: number, msgs: NotificationChain): NotificationChain;
    basicSetEFactoryInstance(newobj: EFactory, msgs: NotificationChain): NotificationChain;
    basicSetESuperPackage(newobj: EPackage, msgs: NotificationChain): NotificationChain;
    eGet_number_boolean_boolean(featureID: number, resolve: boolean, coreType: boolean): any;
    eSet_number_any(featureID: number, newValue: any): void;
}
