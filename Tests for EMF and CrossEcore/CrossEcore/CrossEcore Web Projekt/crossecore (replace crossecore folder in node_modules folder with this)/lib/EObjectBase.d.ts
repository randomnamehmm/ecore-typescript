import { EStructuralFeature } from "./EStructuralFeature";
import { Resource } from "./Resource";
import { BasicEObjectImpl } from "./BasicEObjectImpl";
import { EClass } from "./EClass";
import { EList } from "./EList";
import { EObject } from "./EObject";
import { EOperation } from "./EOperation";
import { TreeIterator } from "./TreeIterator";
import { EReference } from "./EReference";
export declare class EObjectBase extends BasicEObjectImpl implements EObject {
    eIsSet(feature: EStructuralFeature): boolean;
    eContainmentFeature(): EReference;
    eContainingFeature(): EStructuralFeature;
    eIsProxy(): boolean;
    eClass(): EClass;
    eContainer(): EObject;
    eInvoke(operation: EOperation, arguments_: EList<any>): any;
    eSet(feature: EStructuralFeature, newValue: any): void;
    eContents(): EList<EObject>;
    eResource(): Resource;
    eCrossReferences(): EList<EObject>;
    eAllContents(): TreeIterator<EObject>;
    eGet(...args: Array<any>): any;
    eGet_EStructuralFeature_boolean(feature: EStructuralFeature, resolve: boolean): any;
    eGet_EStructuralFeature(feature: EStructuralFeature): any;
    eUnset(feature: EStructuralFeature): void;
    static eStaticClass: EClass;
    protected eStaticClass(): EClass;
    eGet_number_boolean_boolean(featureID: number, resolve: boolean, coreType: boolean): any;
    eSet_number_any(featureID: number, newValue: any): void;
}
